{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
}

How did viewing a diff between two versions of a file help you see the bug that was introduced?

It has helped me in the way to save time, i could see the typo mistake, where it was located and then go either to the terminal and fix it with a text editor or simply by editing it from the source

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Because i am able to save a lot of time and that is very important at the time of programming. I can compare my old to my new version and see errors, typo or things that i might have done better

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

manually commit : 
				
				pros: you can commit and save whenever you want or need to,
					  that will help by always having the important versions saved

				cons: if you forget to commit or save an important file, it can be a big issue for you later, because the no one is saving that for you

automaticaly commit: 

				pros: you do not need to remember when commit
					  it can help you to have all your versions saved

				cons: if it's being saved like every hour, even when you are not working on the file, it will be saved and that could generate a lot of unnecessary info, even worst, later it can be to hard to find the right version, you are looking for


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

because if every file is related with eachother, then that means that all toghether are one project and it is better to see which part of that project was changed, while maybe others weren't and look how all the parts continue reacting with eachother, then only see one part changing alone. Furthermore it's more easy to make one commit for all the parts than one commit for each one, even though every one depends on the other

How can you use the commands git log and git diff to view the history of files?

by using git log, i am able to open and see all the versions of the same file and the commits of it and through that, i can copy the id of an older version and compare it to a newer version

Now that you have your workspace set up, what do you want to try using Git for?

to make commits

FIXING THE BUGS

the newest version fa4c6bade4970c282b3870ad16f1bde8164663a9

First Bug

the last version that works without these problems: 71d52709ddc4066e7a79a1d0a412e43429a0cdeb /removing old readme

problems with the score
the bird flicks everywhere 
there is not obstacles

the version that has the bug: 547f4171a82ec6429d002c1acef357aec41d3f17 refractoring collision det..

Second Bug

the last version that works without this problem: 746f762e38b5bbb7d0b837464ef6ec3f8ee5bf91 / Update index.htm

Clones don't appear

the version that has the bug: 003c8c197cd3b1e5b28b58f53ee14d7ebaa9bb3a
/ speeding clones up
